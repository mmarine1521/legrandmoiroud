// Generated by dia2code
#ifndef RENDER__CONTROLLER__H
#define RENDER__CONTROLLER__H

#include <string>
#include <SFML/Graphics.hpp>

namespace state {
  class State;
};
namespace render {
  class Affichage;
};
namespace engine {
  class CommandeComposite;
  class TourDeJeu;
  class DeplacerArmees;
  class EchangeCartes;
  class Defausser;
  class IssueDuCombat;
  class DesAttaque;
  class DesAttaquant;
  class ChoixPaysAttaque;
  class ChoixPaysAttaquant;
  class PlacementArmees;
  class FinTour;
  class Undo;
  class Piocher;
  class Passer;
  class Distribution;
  class Commande;
}

#include "Affichage.h"
#include "engine/CommandeComposite.h"
#include "engine/TourDeJeu.h"
#include "engine/DeplacerArmees.h"
#include "engine/EchangeCartes.h"
#include "engine/Defausser.h"
#include "engine/IssueDuCombat.h"
#include "engine/DesAttaque.h"
#include "engine/DesAttaquant.h"
#include "engine/ChoixPaysAttaque.h"
#include "engine/ChoixPaysAttaquant.h"
#include "engine/PlacementArmees.h"
#include "engine/FinTour.h"
#include "engine/Undo.h"
#include "engine/Piocher.h"
#include "engine/Passer.h"
#include "engine/Distribution.h"
#include "engine/Commande.h"

namespace render {

  /// class Controller - 
  class Controller {
    // Attributes
  public:
    std::string pays_select;
    std::string pays_depart;
    std::string pays_arrivee;
    sf::RenderWindow* window;
    int armees_select;
  private:
    int idJoueur;
    // Operations
  public:
    Controller (int idJoueur);
    void  Handle (state::State& state, sf::RenderWindow& window);
    void HandlePasser (state::State& state, sf::Event event);
    void HandleFin (state::State& state, sf::Event event);
    void  HandleDistribution (state::State& state, sf::Event event );
    void  HandleChoixPaysAttaquant (state::State& state, sf::Event event , sf::RenderWindow& window);
    void  HandleChoixPaysAttaque (state::State& state, sf::Event event , sf::RenderWindow& window);
    void HandleNbDesAttaquant (state::State& state, sf::Event event, sf::RenderWindow& window);
    void HandleNbDesAttaque (state::State& state, sf::Event event, sf::RenderWindow& window);
     void HandleDefausser (state::State& state, sf::Event event );
    void  HandlePiocher (state::State& state, sf::Event event );
    void  HandleEchange (state::State& state, sf::Event event );
    void  HandlePlacerArmees (state::State& state, sf::Event event , sf::RenderWindow& window);
    void HandleDeplacerArmees (state::State& state, sf::Event event , sf::RenderWindow& window);
    void HandleUndo (state::State& state, sf::Event event);
    // Setters and Getters
  };

};

#endif
